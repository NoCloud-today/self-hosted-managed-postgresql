services:
  pg:
    build:
      context: .
      dockerfile: pg.Dockerfile
      args:
        BACKREST_VERSION: ${BACKREST_VERSION}
        PG_VERSION: ${PG_VERSION}
    image: andrewbolotsky/pg-pgbackrest:${BACKREST_VERSION}
    container_name: pg
    stop_grace_period: 30s
    hostname: pg
    environment:
      - "BACKREST_UID"
      - "BACKREST_GID"
      - "BACKREST_HOST_TYPE=tls"
      - "BACKREST_VERSION=2.54.2"
      - "PG_VERSION"
      - "POSTGRES_PASSWORD=postgres"
    entrypoint: /var/lib/postgresql/pg_prepare.sh
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/${PG_VERSION}/main
    healthcheck:
      test: [ "CMD-SHELL", "su postgres -c 'pg_isready'" ]
      interval: 3s
      retries: 5
      start_period: 50s
    depends_on:
      backup_server-tls:
        condition: service_started
    networks:
      - backup-network
  backup_server-tls:
    image: woblerr/pgbackrest:${BACKREST_VERSION}
    container_name: backup_server-tls
    hostname: backup_server-tls
    volumes:
      - ./certs/pgbackrest/:/etc/pgbackrest/cert
      - ./backup-manager/config/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf
      - ${DOCKER_VOLUME_DIRECTORY:-./volume}/pgbackrest:/var/lib/pgbackrest
    environment:
      - "BACKREST_UID"
      - "BACKREST_GID"
      - "BACKREST_VERSION=2.54.2"
      - "BACKREST_TLS_SERVER=enable"
    expose:
      - "8432"
    networks:
      - backup-network
  backup-manager:
    container_name: backup-manager
    build:
      context: .
      dockerfile: ./backup-manager.Dockerfile
      args:
        BACKREST_VERSION: ${BACKREST_VERSION}
    environment:
      - "BACKREST_UID"
      - "BACKREST_GID"
      - "BACKREST_VERSION=2.54.2"
      - "BACKREST_TLS_SERVER=disable"
      - "PG_VERSION"
      - "POSTGRES_CONFIG=$PWD/postgres/config"
      - "CERTS_DIRECTORY_FOR_INTERNAL_CONTAINER=$PWD/certs/pgbackrest"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "8000:8000"
      - "3000:3000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-./volume}/pgbackrest:/var/lib/pgbackrest
      - ./backup-manager/config/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf
      - /var/run/docker.sock:/var/run/docker.sock
    command: /home/pgbackrest/backup_prepare.sh
    networks:
      - backup-network
    depends_on:
      pg:
        condition: service_healthy
      backup_server-tls:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/ping"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 50s
networks:
  backup-network:
    driver: bridge
volumes:
  postgres_data: