name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Docker on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install docker-desktop -y
        refreshenv
        Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe"
        Start-Sleep -Seconds 30

    - name: Install Docker on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew install --cask docker
        open -a Docker
        sleep 30

    - name: Set up Docker Buildx
      if: matrix.os == 'ubuntu-latest'
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        driver-opts: |
          image=moby/buildkit:master
          network=host

    - name: Install necessary packages
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y openssh-client libssl-dev

    - name: Install OpenSSL on Windows
      if: matrix.os == 'windows-latest'
      run: |
        choco install openssl -y
        refreshenv

    - name: Create ssh_keys directory
      run: mkdir -p ssh_keys

    - name: Generate SSH keys for postgres
      run: |
        ssh-keygen -t rsa -b 4096 -f ssh_keys/id_rsa_postgres -N ""
        chmod 600 ssh_keys/id_rsa_postgres

    - name: Generate SSH keys for backup manager
      run: |
        ssh-keygen -t rsa -b 4096 -f ssh_keys/id_rsa_backup_manager -N ""
        chmod 600 ssh_keys/id_rsa_backup_manager

    - name: Create certificates directory
      run: mkdir -p certs

    - name: Generate SSL certificates
      run: |
        openssl genpkey -algorithm RSA -out certs/private.key -pkeyopt rsa_keygen_bits:2048
        openssl req -new -x509 -key certs/private.key -out certs/public.crt -days 3650 -subj "/CN=minio"
        chmod 600 certs/private.key
        chmod 644 certs/public.crt

    - name: Make test script executable
      if: matrix.os != 'windows-latest'
      run: chmod +x run_tests.sh

    - name: Run tests
      if: matrix.os != 'windows-latest'
      run: ./run_tests.sh

    - name: Run tests on Windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: bash run_tests.sh 