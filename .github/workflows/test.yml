name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        driver-opts: |
          image=moby/buildkit:master
          network=host

    - name: Generate certificates
      run: bash generate-certs.sh

    - name: Prepare environment
      run: |
        touch .env 
        echo 'POSTGRES_PASSWORD=postgres' >> .env 
        echo 'DOCKER_VOLUME_DIRECTORY=./test-volume' >> .env 
        echo 'BACKREST_VERSION=2.54.2' >> .env 
        echo "BACKREST_UID=$(id -u)" >> .env
        echo "BACKREST_GID=$(id -g)" >> .env
        echo 'PG_VERSION=16' >> .env

    - name: Run tests
      run: bash test-scripts/run_unit_tests.sh
  e2e-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        driver-opts: |
          image=moby/buildkit:master
          network=host

    - name: Install necessary packages
      run: sudo apt update && sudo apt install -y openssh-client libssl-dev

    - name: Generate certificates
      run: bash generate-certs.sh

    - name: Prepare environment
      run: |
        touch .env 
        echo 'POSTGRES_PASSWORD=postgres' >> .env 
        echo 'DOCKER_VOLUME_DIRECTORY=./test-volume' >> .env 
        echo 'BACKREST_VERSION=2.54.2' >> .env 
        echo "BACKREST_UID=$(id -u)" >> .env
        echo "BACKREST_GID=$(id -g)" >> .env
        echo 'PG_VERSION=16' >> .env

    - name: Run tests
      run: bash test-scripts/run_e2e_tests.sh

  emergency-stop-postgres-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Install necessary packages
        run: sudo apt update && sudo apt install -y openssh-client libssl-dev

      - name: Generate certificates
        run: bash generate-certs.sh

      - name: Prepare environment
        run: |
          touch .env 
          echo 'POSTGRES_PASSWORD=postgres' >> .env 
          echo 'DOCKER_VOLUME_DIRECTORY=./test-volume' >> .env 
          echo 'BACKREST_VERSION=2.54.2' >> .env 
          echo "BACKREST_UID=$(id -u)" >> .env
          echo "BACKREST_GID=$(id -g)" >> .env
          echo 'PG_VERSION=16' >> .env

      - name: Run pitr-incr backup test with pitr restore
        run: bash test-scripts/run_emergency_stop_test.sh pitr-incr

      - name: Run pitr-diff backup test with pitr restore
        run: bash test-scripts/run_emergency_stop_test.sh pitr-diff

      - name: Run pitr-full backup test with pitr restore
        run: bash test-scripts/run_emergency_stop_test.sh pitr-full

      - name: Run pitr backup with empty cluster
        run: bash test-scripts/run_emergency_stop_test.sh pitr-empty
